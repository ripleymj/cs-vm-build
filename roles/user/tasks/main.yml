---
# tasks file for user
- name: Create opt directory
  file:
    path: "{{ global_base_path }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
- name: Create local applications directory
  file:
    path: /usr/local/share/applications/
    state: directory
    owner: root
    group: root
    mode: "0755"
- name: Get users
  getent:
    database: passwd
- name: Build real user list
  set_fact:
    real_users: >-
      {{
        (real_users|default([])) +
          [
            {
              'user': item.key,
              'homedir': item.value.4,
              'uid': item.value.1 | int,
              'gid': item.value.2
            }
          ]
      }}
  loop: "{{ getent_passwd|dict2items }}"
  when:
    # Ideally, this would pull from useradd.conf to get the lower bound for
    # regular user UIDs; however, 1000 is relatively universal
    - item.value.1 | int >= 1000
    - item.value.4 is match ("^/home/")
    - item.value.5 != "/bin/false"
    - item.value.5 != "/usr/sbin/nologin"
- name: Upgrade installed software
  apt:
    upgrade: full
- name: Install required dependencies
  apt:
    name: '{{ user_dependencies }}'
    state: latest
- name: Touch VM profile
  copy:
    src: csvmprofile
    dest: '{{ global_profile_path }}'
    mode: "0644"
    owner: root
    group: root
    # prevent overwriting
    force: no
- name: Ensure user home directory exists
  file:
    path: "{{ item.homedir }}"
    mode: "0755"
    owner: "{{ item.uid }}"
    group: "{{ item.gid }}"
    state: directory
  loop: "{{ real_users }}"
- name: Trust JMU CS student server SSH
  known_hosts:
    # Per ssh_config(5), this is the default value of GlobalKnownHostsFile
    path: /etc/ssh/ssh_known_hosts
    name: stu.cs.jmu.edu
    key: "{{ stu_host_key }}"
    hash_host: yes
    state: present
- name: Add profile to user bashrc
  lineinfile:
    path: '{{ item.homedir }}/.bashrc'
    line: "source {{ global_profile_path }}"
    state: present
    insertafter: EOF
    # We don't want to break things by having a very basic .bashrc that just
    # sources our profile. We won't create the file if it doesn't exist and
    # we can ignore any errors
    create: no
  ignore_errors: yes
  loop: "{{ real_users }}"

- include_tasks: ubuntu_only.yml
  when: "ansible_distribution == 'Ubuntu'"
- include_tasks: mint_only.yml
  when: "ansible_distribution == 'Linux Mint'"
